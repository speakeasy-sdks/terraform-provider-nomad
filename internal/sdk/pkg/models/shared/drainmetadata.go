// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/hashicorp/terraform-provider-nomad/v5/internal/sdk/pkg/utils"
	"time"
)

type DrainMetadata struct {
	AccessorID *string           `json:"AccessorID,omitempty"`
	Meta       map[string]string `json:"Meta,omitempty"`
	StartedAt  *time.Time        `json:"StartedAt,omitempty"`
	Status     *string           `json:"Status,omitempty"`
	UpdatedAt  *time.Time        `json:"UpdatedAt,omitempty"`
}

func (d DrainMetadata) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DrainMetadata) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DrainMetadata) GetAccessorID() *string {
	if o == nil {
		return nil
	}
	return o.AccessorID
}

func (o *DrainMetadata) GetMeta() map[string]string {
	if o == nil {
		return nil
	}
	return o.Meta
}

func (o *DrainMetadata) GetStartedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartedAt
}

func (o *DrainMetadata) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *DrainMetadata) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
