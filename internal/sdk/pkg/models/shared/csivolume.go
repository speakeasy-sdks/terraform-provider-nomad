// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type CSIVolume struct {
	AccessMode            *string               `json:"AccessMode,omitempty"`
	Allocations           []AllocationListStub  `json:"Allocations,omitempty"`
	AttachmentMode        *string               `json:"AttachmentMode,omitempty"`
	Capacity              *int64                `json:"Capacity,omitempty"`
	CloneID               *string               `json:"CloneID,omitempty"`
	Context               map[string]string     `json:"Context,omitempty"`
	ControllerRequired    *bool                 `json:"ControllerRequired,omitempty"`
	ControllersExpected   *int64                `json:"ControllersExpected,omitempty"`
	ControllersHealthy    *int64                `json:"ControllersHealthy,omitempty"`
	CreateIndex           *int64                `json:"CreateIndex,omitempty"`
	ExternalID            *string               `json:"ExternalID,omitempty"`
	ID                    *string               `json:"ID,omitempty"`
	ModifyIndex           *int64                `json:"ModifyIndex,omitempty"`
	MountOptions          *CSIMountOptions      `json:"MountOptions,omitempty"`
	Name                  *string               `json:"Name,omitempty"`
	Namespace             *string               `json:"Namespace,omitempty"`
	NodesExpected         *int64                `json:"NodesExpected,omitempty"`
	NodesHealthy          *int64                `json:"NodesHealthy,omitempty"`
	Parameters            map[string]string     `json:"Parameters,omitempty"`
	PluginID              *string               `json:"PluginID,omitempty"`
	Provider              *string               `json:"Provider,omitempty"`
	ProviderVersion       *string               `json:"ProviderVersion,omitempty"`
	ReadAllocs            map[string]Allocation `json:"ReadAllocs,omitempty"`
	RequestedCapabilities []CSIVolumeCapability `json:"RequestedCapabilities,omitempty"`
	RequestedCapacityMax  *int64                `json:"RequestedCapacityMax,omitempty"`
	RequestedCapacityMin  *int64                `json:"RequestedCapacityMin,omitempty"`
	RequestedTopologies   *CSITopologyRequest   `json:"RequestedTopologies,omitempty"`
	ResourceExhausted     *time.Time            `json:"ResourceExhausted,omitempty"`
	Schedulable           *bool                 `json:"Schedulable,omitempty"`
	Secrets               map[string]string     `json:"Secrets,omitempty"`
	SnapshotID            *string               `json:"SnapshotID,omitempty"`
	Topologies            []CSITopology         `json:"Topologies,omitempty"`
	WriteAllocs           map[string]Allocation `json:"WriteAllocs,omitempty"`
}
