// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type CSIVolumeExternalStub struct {
	CapacityBytes            *int64            `json:"CapacityBytes,omitempty"`
	CloneID                  *string           `json:"CloneID,omitempty"`
	ExternalID               *string           `json:"ExternalID,omitempty"`
	IsAbnormal               *bool             `json:"IsAbnormal,omitempty"`
	PublishedExternalNodeIDs []string          `json:"PublishedExternalNodeIDs,omitempty"`
	SnapshotID               *string           `json:"SnapshotID,omitempty"`
	Status                   *string           `json:"Status,omitempty"`
	VolumeContext            map[string]string `json:"VolumeContext,omitempty"`
}

func (o *CSIVolumeExternalStub) GetCapacityBytes() *int64 {
	if o == nil {
		return nil
	}
	return o.CapacityBytes
}

func (o *CSIVolumeExternalStub) GetCloneID() *string {
	if o == nil {
		return nil
	}
	return o.CloneID
}

func (o *CSIVolumeExternalStub) GetExternalID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalID
}

func (o *CSIVolumeExternalStub) GetIsAbnormal() *bool {
	if o == nil {
		return nil
	}
	return o.IsAbnormal
}

func (o *CSIVolumeExternalStub) GetPublishedExternalNodeIDs() []string {
	if o == nil {
		return nil
	}
	return o.PublishedExternalNodeIDs
}

func (o *CSIVolumeExternalStub) GetSnapshotID() *string {
	if o == nil {
		return nil
	}
	return o.SnapshotID
}

func (o *CSIVolumeExternalStub) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CSIVolumeExternalStub) GetVolumeContext() map[string]string {
	if o == nil {
		return nil
	}
	return o.VolumeContext
}
