// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type DesiredUpdates struct {
	Canary            *int64 `json:"Canary,omitempty"`
	DestructiveUpdate *int64 `json:"DestructiveUpdate,omitempty"`
	Ignore            *int64 `json:"Ignore,omitempty"`
	InPlaceUpdate     *int64 `json:"InPlaceUpdate,omitempty"`
	Migrate           *int64 `json:"Migrate,omitempty"`
	Place             *int64 `json:"Place,omitempty"`
	Preemptions       *int64 `json:"Preemptions,omitempty"`
	Stop              *int64 `json:"Stop,omitempty"`
}

func (o *DesiredUpdates) GetCanary() *int64 {
	if o == nil {
		return nil
	}
	return o.Canary
}

func (o *DesiredUpdates) GetDestructiveUpdate() *int64 {
	if o == nil {
		return nil
	}
	return o.DestructiveUpdate
}

func (o *DesiredUpdates) GetIgnore() *int64 {
	if o == nil {
		return nil
	}
	return o.Ignore
}

func (o *DesiredUpdates) GetInPlaceUpdate() *int64 {
	if o == nil {
		return nil
	}
	return o.InPlaceUpdate
}

func (o *DesiredUpdates) GetMigrate() *int64 {
	if o == nil {
		return nil
	}
	return o.Migrate
}

func (o *DesiredUpdates) GetPlace() *int64 {
	if o == nil {
		return nil
	}
	return o.Place
}

func (o *DesiredUpdates) GetPreemptions() *int64 {
	if o == nil {
		return nil
	}
	return o.Preemptions
}

func (o *DesiredUpdates) GetStop() *int64 {
	if o == nil {
		return nil
	}
	return o.Stop
}
