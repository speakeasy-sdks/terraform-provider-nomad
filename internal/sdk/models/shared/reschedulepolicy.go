// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ReschedulePolicy struct {
	Attempts      *int64  `json:"Attempts,omitempty"`
	Delay         *int64  `json:"Delay,omitempty"`
	DelayFunction *string `json:"DelayFunction,omitempty"`
	Interval      *int64  `json:"Interval,omitempty"`
	MaxDelay      *int64  `json:"MaxDelay,omitempty"`
	Unlimited     *bool   `json:"Unlimited,omitempty"`
}

func (o *ReschedulePolicy) GetAttempts() *int64 {
	if o == nil {
		return nil
	}
	return o.Attempts
}

func (o *ReschedulePolicy) GetDelay() *int64 {
	if o == nil {
		return nil
	}
	return o.Delay
}

func (o *ReschedulePolicy) GetDelayFunction() *string {
	if o == nil {
		return nil
	}
	return o.DelayFunction
}

func (o *ReschedulePolicy) GetInterval() *int64 {
	if o == nil {
		return nil
	}
	return o.Interval
}

func (o *ReschedulePolicy) GetMaxDelay() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxDelay
}

func (o *ReschedulePolicy) GetUnlimited() *bool {
	if o == nil {
		return nil
	}
	return o.Unlimited
}
